// Place your key bindings in this file to override the defaults
//
// WARNING: Any key presses will be intercepted before Vim
//          unles !editorTextFocus is used.
[
    // Development console
    {
        "key": "cmd+alt+i",
        "command": "workbench.action.toggleDevTools",
    },
    // Tab navigation (non-VIM)
    {
        "key": "ctrl+l",
        "command": "workbench.action.nextEditor", // next tab
        "when": "!editorFocus && !listFocus"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.previousEditor", // previous tab
        "when": "!editorFocus && !listFocus"
    },
    {
        "key": "ctrl+d",
        "command": "workbench.action.closeActiveEditor" // close tab
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.reopenClosedEditor" // re-oepn tab
    },
    // File operations
    {
        // save file (enable vim normal mode)
        "key": "ctrl+s",
        "command": "extension.multiCommand.execute",
        "args": {
            "command": "multiCommand.vimSaveNormalMode"
        },
        "when": "editorFocus"
    },
    // Window operations
    {
        "key": "cmd+i",
        "command": "fb-hg.toggle-interactive-smartlog"
    },
    {
        "key": "ctrl+b",
        "command": "workbench.action.toggleSidebarVisibility" // toggle left-hand sidebar
    },
    {
        "key": "space t",
        "command": "workbench.action.toggleSidebarVisibility", // toggle left-hand sidebar
        "when": "sideBarFocus"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.action.toggleSidebarVisibility", // show explorer bar
        "when": "sideBarFocus"
    },
    {
        "key": "cmd+enter",
        "command": "workbench.action.toggleZenMode" // toggle full-screen
    },
    {
        "key": "ctrl+o",
        "command": "omni-search:quick-search" // toggle omni-file search
    },
    {
        "key": "cmd+o", // open outline panel
        "command": "outline.focus",
        "when": "editorFocus"
    },
    {
        "key": "cmd+o", // close outline panel
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "sideBarFocus"
    },
    {
        "key": "ctrl+space", // return focus to editor
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "sideBarFocus"
    },
    // Editor shortcuts
    {
        "key": "ctrl+space",
        "command": "extension.vim_escape", // switch to normal mode
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+f",
        "command": "editor.action.formatDocument" // enable auto code-formatting
    },
    {
        "key": "ctrl+;",
        "command": "editor.action.triggerSuggest" // auto-complete
    },
    {
        "key": "ctrl+p",
        "command": "editor.action.peekDefinition", // peek definition of some code variable
        "when": "editorFocus"
    },
    // List navigation
    {
        "key": "enter",
        "command": "-renameFile", // disable rename
        "when": "explorerViewletVisible && filesExplorerFocus"
    },
    {
        "key": "enter",
        "command": "list.select", // list action, i.e. open file, goto ref
        "when": "listFocus"
    },
    {
        "key": "ctrl+j",
        "command": "list.focusDown", // next list item
        "when": "listFocus"
    },
    {
        "key": "ctrl+k",
        "command": "list.focusUp", // prev list item
        "when": "listFocus"
    },
    {
        "key": "ctrl+h",
        "command": "list.collapse", // go up to parent
        "when": "listFocus"
    },
    {
        "key": "ctrl+l",
        "command": "list.expand", // expand children items
        "when": "listFocus"
    },
    // Quick-select navigation
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion", // next list item
        "when": "suggestWidgetVisible"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext", // next list item
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion", // prev list item
        "when": "suggestWidgetVisible"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious", // prev list item
        "when": "inQuickOpen"
    },
]
